name: CI

on:
    push:
        branches: [main]
    pull_request:
    merge_group:
        types: [checks_requested]

jobs:
    check:
        name: clippy
        runs-on: ubuntu-latest
        env:
            MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
            LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
            TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
        steps:
        - uses: actions/checkout@v3
        - uses: dtolnay/rust-toolchain@1.84.1
          with:
            components: rustfmt, clippy
        - uses: Swatinem/rust-cache@v2
        - name: add llvm deb repository
          uses: myci-actions/add-deb-repo@10
          with:
                repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
                repo-name: llvm-repo
                keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
        - name: Install LLVM
          run: sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools
        - name: Clippy
          run: make check

    fmt:
        name: rustfmt
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - uses: dtolnay/rust-toolchain@1.84.1
          with:
            components: rustfmt
        - run: cargo fmt --all -- --check

    test:
        name: test (linux, amd64)
        runs-on: ubuntu-latest
        env:
            MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
            LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
            TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
            RUST_LOG: debug
        steps:
        - uses: actions/checkout@v3
        - name: Setup rust env
          uses: dtolnay/rust-toolchain@1.84.1
        - name: Retreive cached dependecies
          uses: Swatinem/rust-cache@v2
        - name: add llvm deb repository
          uses: myci-actions/add-deb-repo@10
          with:
            repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
            repo-name: llvm-repo
            keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
        - name: Install LLVM
          run: sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools
        - name: Install Link deps
          run: sudo apt-get install libc-dev build-essential
        - name: test
          run: make test
    test-macos:
      name: test (macOS)
      runs-on: macos-14
      env:
        CARGO_TERM_COLOR: always
        LIBRARY_PATH: /opt/homebrew/lib
        MLIR_SYS_190_PREFIX: /opt/homebrew/opt/llvm@19
        LLVM_SYS_191_PREFIX: /opt/homebrew/opt/llvm@19
        TABLEGEN_190_PREFIX: /opt/homebrew/opt/llvm@19
        RUST_LOG: debug
      steps:
        - uses: actions/checkout@v4
        - name: Rustup toolchain install
          uses: dtolnay/rust-toolchain@1.84.1
        - uses: homebrew/actions/setup-homebrew@master
        # makes melior be bugged with ods
        #- name: Retreive cached dependecies
          #uses: Swatinem/rust-cache@v2
        - name: install llvm
          run: brew install llvm@19
        - name: Run tests
          run: make test
    coverage:
        name: coverage
        runs-on: ubuntu-latest
        env:
            CARGO_TERM_COLOR: always
            MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
            LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
            TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
            RUST_LOG: debug
        steps:
            - uses: actions/checkout@v3
            - name: Setup rust env
              uses: dtolnay/rust-toolchain@1.84.1
            - name: Retreive cached dependecies
              uses: Swatinem/rust-cache@v2
            - name: add llvm deb repository
              uses: myci-actions/add-deb-repo@10
              with:
                    repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
                    repo-name: llvm-repo
                    keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
            - name: Install LLVM
              run: sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools
            - name: Install Link deps
              run: sudo apt-get install libc-dev build-essential
            - name: Install cargo-llvm-cov
              uses: taiki-e/install-action@cargo-llvm-cov
            - name: test and generate coverage
              run: make coverage
            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
                files: lcov.info
                fail_ci_if_error: true
    bench:
      name: Bench
      runs-on: ubuntu-latest
      env:
        MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
        LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
        TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
      steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@1.84.1
          with:
            components: clippy
        - uses: Swatinem/rust-cache@v2
        - name: Setup rust env
          uses: dtolnay/rust-toolchain@1.84.1
        - name: Retreive cached dependecies
          uses: Swatinem/rust-cache@v2
        - name: add llvm deb repository
          uses: myci-actions/add-deb-repo@11
          with:
                repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
                repo-name: llvm-repo
                keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
        - name: Install LLVM
          run: sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools
        - name: Install Link deps
          run: sudo apt-get install libc-dev build-essential
        - name: Run bench
          run: ./bench/bench.sh | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' > bench.md

        - name: Find Bench Comment
          continue-on-error: true
          uses: peter-evans/find-comment@v3
          id: fc
          with:
            issue-number: ${{ github.event.pull_request.number }}
            comment-author: 'github-actions[bot]'
            body-includes: Benchmarking
        - name: Create or update bench comment
          continue-on-error: true
          uses: peter-evans/create-or-update-comment@v4
          with:
            comment-id: ${{ steps.fc.outputs.comment-id }}
            issue-number: ${{ github.event.pull_request.number }}
            body-path: bench.md
            edit-mode: replace
